//matahari

        objects.add(new Sphere(
                Arrays.asList(
                        //shaderFile lokasi menyesuaikan objectnya
                        new ShaderProgram.ShaderModuleData
                                ("resources/shaders/scene.vert"
                                        , GL_VERTEX_SHADER),
                        new ShaderProgram.ShaderModuleData
                                ("resources/shaders/scene.frag"
                                        , GL_FRAGMENT_SHADER)
                ),
                new ArrayList<>(),
                new Vector4f(1f, 1f, 0.0f, 0.0f), 0.0f, 0.0f, 0.1f, 0.1f, 0.1f, 1
        ));

        //merku

        objects.add(new Sphere(
                Arrays.asList(
                        //shaderFile lokasi menyesuaikan objectnya
                        new ShaderProgram.ShaderModuleData
                                ("resources/shaders/scene.vert"
                                        , GL_VERTEX_SHADER),
                        new ShaderProgram.ShaderModuleData
                                ("resources/shaders/scene.frag"
                                        , GL_FRAGMENT_SHADER)
                ),
                new ArrayList<>(),
                new Vector4f(0.3f, 4f, 0.2f, 1.0f), 0.0f, 0.0f, 0.2f, 0.2f, 0.2f, 1
        ));

        //venus

        objects.add(new Sphere(
                Arrays.asList(
                        //shaderFile lokasi menyesuaikan objectnya
                        new ShaderProgram.ShaderModuleData
                                ("resources/shaders/scene.vert"
                                        , GL_VERTEX_SHADER),
                        new ShaderProgram.ShaderModuleData
                                ("resources/shaders/scene.frag"
                                        , GL_FRAGMENT_SHADER)
                ),
                new ArrayList<>(),
                new Vector4f(0.8f, 0.4f, 0.9f, 0f), 0.0f, 0.0f, 0.2f, 0.2f, 0.2f, 1
        ));

        //bumi

        objects.add(new Sphere(
                Arrays.asList(
                        //shaderFile lokasi menyesuaikan objectnya
                        new ShaderProgram.ShaderModuleData
                                ("resources/shaders/scene.vert"
                                        , GL_VERTEX_SHADER),
                        new ShaderProgram.ShaderModuleData
                                ("resources/shaders/scene.frag"
                                        , GL_FRAGMENT_SHADER)
                ),
                new ArrayList<>(),
                new Vector4f(0f, 0f, 1f, 0f), 0.0f, 0.0f, 0.2f, 0.2f, 0.2f, 1
        ));

        //mars

        objects.add(new Sphere(
                Arrays.asList(
                        //shaderFile lokasi menyesuaikan objectnya
                        new ShaderProgram.ShaderModuleData
                                ("resources/shaders/scene.vert"
                                        , GL_VERTEX_SHADER),
                        new ShaderProgram.ShaderModuleData
                                ("resources/shaders/scene.frag"
                                        , GL_FRAGMENT_SHADER)
                ),
                new ArrayList<>(),
                new Vector4f(0.3f, 0.7f, 0.2f, 0.5f), 0.0f, 0.0f, 0.2f, 0.2f, 0.2f, 1
        ));

        //bulan

        objects.add(new Sphere(
                Arrays.asList(
                        //shaderFile lokasi menyesuaikan objectnya
                        new ShaderProgram.ShaderModuleData
                                ("resources/shaders/scene.vert"
                                        , GL_VERTEX_SHADER),
                        new ShaderProgram.ShaderModuleData
                                ("resources/shaders/scene.frag"
                                        , GL_FRAGMENT_SHADER)
                ),
                new ArrayList<>(),
                new Vector4f(0.2f, 0.2f, 0.2f, 0f), 0.0f, 0.0f, 0.2f, 0.2f, 0.2f, 1
        ));

        objects.get(0).scaleObject(2f, 2f, 2f);
        objects.get(1).scaleObject(0.2f, 0.2f, 0.2f);
        objects.get(2).scaleObject(0.3f, 0.3f, 0.3f);
        objects.get(3).scaleObject(0.4f, 0.4f, 0.4f);
        objects.get(4).scaleObject(0.26f, 0.26f, 0.26f);
        objects.get(5).scaleObject(0.26f, 0.26f, 0.26f);


        objects.get(1).translateObject(0.2f, 0f, 0f);
        objects.get(2).translateObject(0.4f, 0f, 0f);
        objects.get(3).translateObject(0.6f, 0f, 0f);
        objects.get(4).translateObject(0.8f, 0f, 0f);
        objects.get(5).translateObject(0.68f, 0f, 0f);


        //        if (window.isKeyPressed(GLFW_KEY_F)) {
        //            objects.get(1).rotateObject((float) Math.toRadians(0.5f), 0.0f, 0.0f, 1.0f);
        //            objects.get(2).rotateObject((float) Math.toRadians(0.5f), 0.0f, 0.0f, 1.0f);
        //            objects.get(3).rotateObject((float) Math.toRadians(0.5f), 0.0f, 0.0f, 1.0f);
        //            objects.get(4).rotateObject((float) Math.toRadians(0.5f), 0.0f, 0.0f, 1.0f);
        //            objects.get(5).rotateObject((float) Math.toRadians(0.5f), 0.0f, 0.0f, 1.0f);
        //        }
        //
        //        if (window.isKeyPressed(GLFW_KEY_G)) {
        //            objects.get(1).rotateObject((float) Math.toRadians(0.5f), 0.0f, 0.0f, 0f);
        //            objects.get(2).rotateObject((float) Math.toRadians(0.5f), 0.0f, 0.0f, 0f);
        //            objects.get(3).rotateObject((float) Math.toRadians(0.5f), 0.0f, 0.0f, 0f);
        //            objects.get(4).rotateObject((float) Math.toRadians(0.5f), 0.0f, 0.0f, 0f);
        //        }
        //
        //        if (window.isKeyPressed(GLFW_KEY_H)) {
        //            Vector3f bumi = objects.get(3).model.transformPosition(new Vector3f(0.0f, 0.0f, 0f));//bumi
        //
        //            objects.get(5).translateObject(-bumi.x, -bumi.y, 0f);//bulan
        //            objects.get(5).rotateObject((float) Math.toRadians(0.5f), 0f, 0f, 1f);
        //            objects.get(5).translateObject(bumi.x, bumi.y, 0f);
        //        }